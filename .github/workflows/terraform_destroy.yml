name: "Terraform Destroy"

on:
  workflow_dispatch:
  pull_request:
    types: [closed, converted_to_draft]
    branches-ignore: [prod] # will destroy all PRs branches except stag->prod
  repository_dispatch:
    types: [terraform-destroy]

env:
  tf_version: '1.5.7'
  tg_version: '0.53.2'
  working_dir: 'infra'
  COMPANY_REF: ${{ vars.COMPANY_REF }}
  REPO_REF: ${{ vars.REPO_REF }}
  # ASzc/change-string-case-action@master
  BRANCH_REF: ${{ github.event.client_payload.branch_ref || github.head_ref || github.ref_name }}
  DOMAIN_NAME: ${{ vars.DOMAIN_NAME }}
  AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}
  AWS_PROFILE_NAME: ${{ vars.AWS_PROFILE_NAME }}
  AWS_ACCOUNT_ID: ${{ vars.AWS_ACCOUNT_ID }}
  AWS_ACCESS_KEY_ID: ${{ vars.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  terraform:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Validate Branch Ref
        run: |
          if [[ ! ${{ env.BRANCH_REF }} =~ ^[a-zA-Z0-9_-]+$ ]]; then
            echo "Invalid BRANCH_REF"
            exit 1
          fi

      - name: Terragrunt Init
        uses: gruntwork-io/terragrunt-action@main
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_dir }}
          tg_command: 'init'
            
      - name: Terragrunt Destroy
        uses: gruntwork-io/terragrunt-action@main
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_dir }}
          tg_command: 'destroy'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_DEFAULT_REGION }}
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Clean
        env:
          AWS_BUCKET_NAME: ${{ env.COMPANY_REF }}-${{ env.REPO_REF }}-${{ env.BRANCH_REF }}-tf-state
          AWS_DYNAMODB_TABLE_NAME: ${{ env.COMPANY_REF }}-${{ env.REPO_REF }}-${{ env.BRANCH_REF }}-tf-locks
        run: |
          echo AWS_BUCKET_NAME ${AWS_BUCKET_NAME,,}
          echo AWS_DYNAMODB_TABLE_NAME ${AWS_DYNAMODB_TABLE_NAME,,}
          aws s3api delete-objects \
            --bucket ${AWS_BUCKET_NAME,,} \
            --delete "$(aws s3api list-object-versions \
              --bucket=${AWS_BUCKET_NAME,,} \
              --output=json \
              --query='{Objects: Versions[].{Key:Key,VersionId:VersionId}}' \
            )"
          aws s3api delete-bucket --bucket ${AWS_BUCKET_NAME,,} --region ${{ env.AWS_DEFAULT_REGION }}

          aws dynamodb delete-table --region ${{ env.AWS_DEFAULT_REGION }} --table-name ${AWS_DYNAMODB_TABLE_NAME,,}
