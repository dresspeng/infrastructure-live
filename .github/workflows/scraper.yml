name: Scraper

on:
  workflow_dispatch:
    inputs:
      environment:
        type: environment
        description: 'The environment to deploy to'
        required: true
        default: KookaS
      running:
        type: boolean
        description: 'Up and running'
        required: true
        default: true
  # push:
  #   branches-ignore: [dependabot/**]
  # pull_request:
  #   branches: [master]

jobs:
  prepare-backend:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment || 'KookaS' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Prepare terragrunt for all microservices
        run: |
          make prepare-terragrunt \
            DOMAIN_NAME=${{ vars.DOMAIN_NAME }} \
            AWS_REGION=${{ vars.AWS_REGION }} \
            AWS_PROFILE=${{ vars.AWS_PROFILE }} \
            AWS_ACCOUNT_ID=${{ vars.AWS_ACCOUNT_ID }}

      - name: Prepare terragrunt for backend
        env: 
          GITHUB_TOKEN: ${{ secrets.GH_TERRA_TOKEN }}
          FLICKR_PRIVATE_KEY: ${{ secrets.FLICKR_PRIVATE_KEY }}
          FLICKR_PUBLIC_KEY: ${{ secrets.FLICKR_PUBLIC_KEY }}
          UNSPLASH_PRIVATE_KEY: ${{ secrets.UNSPLASH_PRIVATE_KEY }}
          UNSPLASH_PUBLIC_KEY: ${{ secrets.UNSPLASH_PUBLIC_KEY }}
          PEXELS_PUBLIC_KEY: ${{ secrets.PEXELS_PUBLIC_KEY }}
        run: |
          make prepare-scraper-backend \
            TERRAGRUNT_CONFIG_PATH=live/aws/region/scraper/backend \
            BRANCH_NAME=${{ github.head_ref || github.ref_name }} \
            FLICKR_PRIVATE_KEY=${FLICKR_PRIVATE_KEY} \
            FLICKR_PUBLIC_KEY=${FLICKR_PUBLIC_KEY} \
            UNSPLASH_PRIVATE_KEY=${UNSPLASH_PRIVATE_KEY} \
            UNSPLASH_PUBLIC_KEY=${UNSPLASH_PUBLIC_KEY} \
            PEXELS_PUBLIC_KEY=${PEXELS_PUBLIC_KEY} \
            AWS_REGION=${{ vars.AWS_REGION }} \
            AWS_ACCESS_KEY=${{ vars.AWS_ACCESS_KEY }} \
            AWS_SECRET_KEY=${{ secrets.AWS_SECRET_KEY }}
          if [[ ${{ inputs.running }} == false ]]; then
            make destroy-ecs TERRAGRUNT_CONFIG_PATH=live/aws/region/scraper/backend
          else
            make init TERRAGRUNT_CONFIG_PATH=live/aws/region/scraper/backend
            make apply TERRAGRUNT_CONFIG_PATH=live/aws/region/scraper/backend
          fi
  
  # # FIXME: files created above are missing in reusable workflow
  # run-backend:
  #   needs: [prepare-backend]
  #   uses: ./.github/workflows/terragrunt.yml
  #   with:
  #     environment: ${{ inputs.environment || 'KookaS' }}
  #     running: ${{ inputs.running }}
  #     terragrunt_config_path: live/aws/region/scraper/backend
  #   secrets: inherit

  prepare-frontend:
    # needs: [run-backend]
    needs: [prepare-backend]
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment || 'KookaS' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Prepare terragrunt for all microservices
        run: make prepare-terragrunt

      - name: Prepare terragrunt for frontend
        env: 
          GITHUB_TOKEN: ${{ secrets.GH_TERRA_TOKEN }}
        run: |
          make prepare-scraper-frontend \
            TERRAGRUNT_CONFIG_PATH=live/aws/region/scraper/frontend \
            BRANCH_NAME=${{ github.head_ref || github.ref_name }}
          if [[ ${{ inputs.running }} == false ]]; then
            make destroy-ecs TERRAGRUNT_CONFIG_PATH=live/aws/region/scraper/frontend
          else
            make init TERRAGRUNT_CONFIG_PATH=live/aws/region/scraper/frontend
            make apply TERRAGRUNT_CONFIG_PATH=live/aws/region/scraper/frontend
          fi
  
  # # FIXME: files created above are missing in reusable workflow
  # run-frontend:
  #   needs: [prepare-frontend]
  #   uses: ./.github/workflows/terragrunt.yml
  #   with:
  #     environment: ${{ inputs.environment || 'KookaS' }}
  #     running: ${{ inputs.running }}
  #     terragrunt_config_path: live/aws/region/scraper/frontend
  #   secrets: inherit